{
  "openapi": "3.0.0",
  "info": {
    "title": "Fleet Management API",
    "version": "1.0.0",
    "description": "API documentation for the Fleet Management System"
  },
  "servers": [
    {
      "url": "http://localhost:3003",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    { "bearerAuth": [] }
  ],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Authenticate user and return access/refresh tokens.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "employee_number": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["employee_number", "password"],
                "example": {
                  "employee_number": "EMP001",
                  "password": "admin123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "accessToken": { "type": "string" },
                    "refreshToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "summary": "Register",
        "description": "Register a new user (admin only).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "employeeNumber": { "type": "string" },
                  "name": { "type": "string" },
                  "password": { "type": "string" },
                  "role": { "type": "string" }
                },
                "required": ["employeeNumber", "name", "password", "role"],
                "example": {
                  "employeeNumber": "EMP004",
                  "name": "New User",
                  "password": "password123",
                  "role": "site-incharge",
                  "mobile_number": "03001234567",
                  "site_id": 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "accessToken": { "type": "string" },
                    "refreshToken": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "type": "object" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/api/v1/users": {
      "get": { "summary": "Get all users", "responses": { "200": { "description": "A list of users" } } },
      "post": { "summary": "Create a new user", "responses": { "201": { "description": "User created" } } }
    },
    "/api/v1/users/{id}": {
      "get": { "summary": "Get user by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "User found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update user by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "User updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete user by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "User deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/roles": {
      "get": { "summary": "Get all roles", "responses": { "200": { "description": "A list of roles" } } },
      "post": { "summary": "Create a new role", "responses": { "201": { "description": "Role created" } } }
    },
    "/api/v1/roles/{id}": {
      "get": { "summary": "Get role by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Role found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update role by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Role updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete role by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Role deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/sites": {
      "get": { "summary": "Get all sites", "responses": { "200": { "description": "A list of sites" } } },
      "post": { "summary": "Create a new site", "responses": { "201": { "description": "Site created" } } }
    },
    "/api/v1/sites/{id}": {
      "get": { "summary": "Get site by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Site found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update site by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Site updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete site by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Site deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/tanks": {
      "get": { "summary": "Get all tanks", "responses": { "200": { "description": "A list of tanks" } } },
      "post": { "summary": "Create a new tank", "responses": { "201": { "description": "Tank created" } } }
    },
    "/api/v1/tanks/{id}": {
      "get": { "summary": "Get tank by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Tank found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update tank by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Tank updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete tank by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Tank deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/suppliers": {
      "get": { "summary": "Get all suppliers", "responses": { "200": { "description": "A list of suppliers" } } },
      "post": { "summary": "Create a new supplier", "responses": { "201": { "description": "Supplier created" } } }
    },
    "/api/v1/suppliers/{id}": {
      "get": { "summary": "Get supplier by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Supplier found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update supplier by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Supplier updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete supplier by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Supplier deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/vehicles-equipment": {
      "get": { "summary": "Get all vehicles/equipment", "responses": { "200": { "description": "A list of vehicles/equipment" } } },
      "post": { "summary": "Create a new vehicle/equipment", "responses": { "201": { "description": "Vehicle/Equipment created" } } }
    },
    "/api/v1/vehicles-equipment/{id}": {
      "get": { "summary": "Get vehicle/equipment by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Vehicle/Equipment found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update vehicle/equipment by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Vehicle/Equipment updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete vehicle/equipment by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Vehicle/Equipment deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/jobs-projects": {
      "get": { "summary": "Get all jobs/projects", "responses": { "200": { "description": "A list of jobs/projects" } } },
      "post": { "summary": "Create a new job/project", "responses": { "201": { "description": "Job/Project created" } } }
    },
    "/api/v1/jobs-projects/{id}": {
      "get": { "summary": "Get job/project by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Job/Project found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update job/project by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Job/Project updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete job/project by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Job/Project deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/dashboard/stats": {
      "get": {
        "summary": "Get dashboard statistics",
        "description": "Get total fuel received, consumed, current stock, and active jobs count",
        "responses": {
          "200": {
            "description": "Dashboard statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalFuelReceived": { "type": "number" },
                        "totalConsumed": { "type": "number" },
                        "currentStock": { "type": "number" },
                        "activeJobs": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/recent-activity": {
      "get": {
        "summary": "Get recent fuel activities",
        "description": "Get recent fuel consumption activities for dashboard table",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10 },
            "description": "Number of records to return"
          }
        ],
        "responses": {
          "200": { "description": "Recent activities list" }
        }
      }
    },
    "/api/v1/dashboard/alerts": {
      "get": {
        "summary": "Get fuel level alerts",
        "description": "Get alerts for tanks with low fuel levels",
        "responses": {
          "200": { "description": "Fuel level alerts" }
        }
      }
    },
    "/api/v1/dashboard/tank-stock-levels": {
      "get": {
        "summary": "Get tank stock levels",
        "description": "Get current stock levels for all tanks",
        "responses": {
          "200": { "description": "Tank stock levels" }
        }
      }
    },
    "/api/v1/diesel-receiving/next-receipt-number": {
      "get": {
        "summary": "Generate next receipt number",
        "description": "Auto-generate the next receipt number for fuel receiving",
        "responses": {
          "200": {
            "description": "Next receipt number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "receiptNumber": { "type": "string", "example": "RCP-2025-001234" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/diesel-receiving/create": {
      "post": {
        "summary": "Create fuel receiving record",
        "description": "Create a new fuel receiving record with frontend form data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiptNumber": { "type": "string" },
                  "dateTime": { "type": "string", "format": "date-time" },
                  "quantity": { "type": "number" },
                  "tankId": { "type": "integer" },
                  "receivedBy": { "type": "string" },
                  "supplierId": { "type": "integer" },
                  "mobileNumber": { "type": "string" },
                  "notes": { "type": "string" },
                  "siteId": { "type": "integer" }
                },
                "required": ["receiptNumber", "dateTime", "quantity", "tankId", "receivedBy", "supplierId"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Fuel receipt recorded successfully" }
        }
      }
    },
    "/api/v1/diesel-receiving/tanks/{siteId}": {
      "get": {
        "summary": "Get tanks by site",
        "description": "Get tanks with capacity info for dropdown, optionally filtered by site",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "required": false,
            "schema": { "type": "integer" },
            "description": "Site ID to filter tanks (optional)"
          }
        ],
        "responses": {
          "200": { "description": "List of tanks with capacity info" }
        }
      }
    },
    "/api/v1/diesel-receiving/employees/tank-incharge": {
      "get": {
        "summary": "Get tank in-charge employees",
        "description": "Get employees who can receive fuel (tank in-charge, site managers, admins)",
        "responses": {
          "200": { "description": "List of tank in-charge employees" }
        }
      }
    },
    "/api/v1/diesel-receiving/suppliers/active": {
      "get": {
        "summary": "Get active suppliers",
        "description": "Get list of active suppliers for dropdown",
        "responses": {
          "200": { "description": "List of active suppliers" }
        }
      }
    },
    "/api/v1/diesel-receiving": {
      "get": { "summary": "Get all diesel receiving records", "responses": { "200": { "description": "A list of diesel receiving records" } } }
    },
    "/api/v1/diesel-receiving/{id}": {
      "get": { "summary": "Get diesel receiving record by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Diesel receiving record found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update diesel receiving record by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Diesel receiving record updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete diesel receiving record by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Diesel receiving record deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/diesel-consumption/create": {
      "post": {
        "summary": "Create fuel consumption record",
        "description": "Create a new fuel consumption record with frontend form data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vehicleEquipmentType": { "type": "string" },
                  "plateNumberMachineId": { "type": "string" },
                  "dateTime": { "type": "string", "format": "date-time" },
                  "jobNumber": { "type": "string" },
                  "operatorName": { "type": "string" },
                  "operatorMobile": { "type": "string" },
                  "employeeNumber": { "type": "string" },
                  "tankSource": { "type": "string" },
                  "quantity": { "type": "number" },
                  "odometerReading": { "type": "number" },
                  "thumbprintData": { "type": "string" },
                  "siteId": { "type": "integer" }
                },
                "required": ["vehicleEquipmentType", "plateNumberMachineId", "dateTime", "jobNumber", "employeeNumber", "quantity", "odometerReading"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Fuel consumption recorded successfully" }
        }
      }
    },
    "/api/v1/diesel-consumption/vehicle-types": {
      "get": {
        "summary": "Get vehicle/equipment types",
        "description": "Get distinct vehicle/equipment types for dropdown",
        "responses": {
          "200": { "description": "List of vehicle/equipment types" }
        }
      }
    },
    "/api/v1/diesel-consumption/vehicles/{type}": {
      "get": {
        "summary": "Get vehicles by type",
        "description": "Get vehicles/equipment filtered by type",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Vehicle/equipment type"
          }
        ],
        "responses": {
          "200": { "description": "List of vehicles/equipment of specified type" }
        }
      }
    },
    "/api/v1/diesel-consumption/jobs/active": {
      "get": {
        "summary": "Get active jobs",
        "description": "Get currently active jobs for dropdown",
        "responses": {
          "200": { "description": "List of active jobs" }
        }
      }
    },
    "/api/v1/diesel-consumption/employees/operators": {
      "get": {
        "summary": "Get operator employees",
        "description": "Get employees who can operate vehicles/equipment",
        "responses": {
          "200": { "description": "List of operator/driver employees" }
        }
      }
    },
    "/api/v1/diesel-consumption/thumbprint": {
      "post": {
        "summary": "Save thumbprint data",
        "description": "Store thumbprint authentication data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consumptionId": { "type": "integer" },
                  "thumbprintData": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Thumbprint saved successfully" }
        }
      }
    },
    "/api/v1/diesel-consumption": {
      "get": { "summary": "Get all diesel consumption records", "responses": { "200": { "description": "A list of diesel consumption records" } } }
    },
    "/api/v1/diesel-consumption/{id}": {
      "get": { "summary": "Get diesel consumption record by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Diesel consumption record found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update diesel consumption record by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Diesel consumption record updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete diesel consumption record by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Diesel consumption record deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/invoices/filtered": {
      "get": {
        "summary": "Get filtered invoices",
        "description": "Get invoices filtered by type, supplier, date range, etc.",
        "parameters": [
          { "name": "invoiceType", "in": "query", "schema": { "type": "string" } },
          { "name": "supplierId", "in": "query", "schema": { "type": "integer" } },
          { "name": "dateFrom", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "dateTo", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer", "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 10 } }
        ],
        "responses": {
          "200": { "description": "Filtered invoices with pagination" }
        }
      }
    },
    "/api/v1/invoices/generate-from-consumption": {
      "post": {
        "summary": "Generate invoice from consumption records",
        "description": "Create invoice based on fuel consumption records for a specific period",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": { "type": "string", "format": "date" },
                  "endDate": { "type": "string", "format": "date" },
                  "siteId": { "type": "integer" },
                  "jobId": { "type": "integer" },
                  "generatedByUserId": { "type": "string" }
                },
                "required": ["startDate", "endDate", "generatedByUserId"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Invoice generated successfully" }
        }
      }
    },
    "/api/v1/reports/fuel-usage": {
      "get": {
        "summary": "Generate fuel usage report",
        "description": "Generate detailed fuel usage report with filters",
        "parameters": [
          { "name": "reportType", "in": "query", "schema": { "type": "string", "enum": ["daily", "weekly", "monthly", "custom"] } },
          { "name": "dateFrom", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "dateTo", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "siteId", "in": "query", "schema": { "type": "integer" } },
          { "name": "vehicleType", "in": "query", "schema": { "type": "string" } },
          { "name": "jobId", "in": "query", "schema": { "type": "integer" } },
          { "name": "page", "in": "query", "schema": { "type": "integer", "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 50 } }
        ],
        "responses": {
          "200": { "description": "Fuel usage report with summary and pagination" }
        }
      }
    },
    "/api/v1/reports/sites": {
      "get": {
        "summary": "Get sites for reports",
        "description": "Get list of sites for report filtering",
        "responses": {
          "200": { "description": "List of sites" }
        }
      }
    },
    "/api/v1/reports/vehicle-types": {
      "get": {
        "summary": "Get vehicle types for reports",
        "description": "Get distinct vehicle types for report filtering",
        "responses": {
          "200": { "description": "List of vehicle types" }
        }
      }
    },
    "/api/v1/reports/export": {
      "get": {
        "summary": "Export report data",
        "description": "Export fuel usage report data in various formats",
        "parameters": [
          { "name": "reportType", "in": "query", "schema": { "type": "string", "enum": ["daily", "weekly", "monthly", "custom"] } },
          { "name": "dateFrom", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "dateTo", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "siteId", "in": "query", "schema": { "type": "integer" } },
          { "name": "vehicleType", "in": "query", "schema": { "type": "string" } },
          { "name": "format", "in": "query", "schema": { "type": "string", "enum": ["json", "csv"], "default": "json" } }
        ],
        "responses": {
          "200": { "description": "Exported report data" }
        }
      }
    },
    "/api/v1/reports/efficiency-analysis": {
      "get": {
        "summary": "Get fuel efficiency analysis",
        "description": "Get fuel efficiency analysis grouped by vehicle",
        "parameters": [
          { "name": "dateFrom", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "dateTo", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "siteId", "in": "query", "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Fuel efficiency analysis" }
        }
      }
    },
    "/api/v1/audit-log/filtered": {
      "get": {
        "summary": "Get filtered audit logs",
        "description": "Get audit logs filtered by action type, user, date range, etc.",
        "parameters": [
          { "name": "actionType", "in": "query", "schema": { "type": "string" } },
          { "name": "userId", "in": "query", "schema": { "type": "string" } },
          { "name": "dateFrom", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "dateTo", "in": "query", "schema": { "type": "string", "format": "date" } },
          { "name": "recordType", "in": "query", "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer", "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 50 } }
        ],
        "responses": {
          "200": { "description": "Filtered audit logs with pagination" }
        }
      }
    },
    "/api/v1/audit-log/users": {
      "get": {
        "summary": "Get users for audit filter",
        "description": "Get list of users for audit log filtering",
        "responses": {
          "200": { "description": "List of users" }
        }
      }
    },
    "/api/v1/audit-log/record-types": {
      "get": {
        "summary": "Get record types for audit filter",
        "description": "Get distinct record types for audit log filtering",
        "responses": {
          "200": { "description": "List of record types" }
        }
      }
    },
    "/api/v1/invoices": {
      "get": { "summary": "Get all invoices", "responses": { "200": { "description": "A list of invoices" } } },
      "post": { "summary": "Create a new invoice", "responses": { "201": { "description": "Invoice created" } } }
    },
    "/api/v1/invoices/{id}": {
      "get": { "summary": "Get invoice by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Invoice found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update invoice by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Invoice updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete invoice by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Invoice deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/invoice-items": {
      "get": { "summary": "Get all invoice items", "responses": { "200": { "description": "A list of invoice items" } } },
      "post": { "summary": "Create a new invoice item", "responses": { "201": { "description": "Invoice item created" } } }
    },
    "/api/v1/invoice-items/{id}": {
      "get": { "summary": "Get invoice item by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Invoice item found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update invoice item by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Invoice item updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete invoice item by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Invoice item deleted" }, "404": { "description": "Not found" } } }
    },
    "/api/v1/audit-log": {
      "get": { "summary": "Get all audit log entries", "responses": { "200": { "description": "A list of audit log entries" } } },
      "post": { "summary": "Create a new audit log entry", "responses": { "201": { "description": "Audit log entry created" } } }
    },
    "/api/v1/audit-log/{id}": {
      "get": { "summary": "Get audit log entry by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Audit log entry found" }, "404": { "description": "Not found" } } },
      "put": { "summary": "Update audit log entry by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "200": { "description": "Audit log entry updated" }, "404": { "description": "Not found" } } },
      "delete": { "summary": "Delete audit log entry by ID", "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }], "responses": { "204": { "description": "Audit log entry deleted" }, "404": { "description": "Not found" } } }
    }
  }
}
