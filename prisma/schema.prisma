generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  employee_id        Int      @id @default(autoincrement())
  employee_number    String   @unique
  password_hash      String
  employee_name      String
  mobile_number      String
  role_id            Int
  site_id            Int

  roles              roles    @relation(fields: [role_id], references: [role_id])
  sites              sites    @relation(fields: [site_id], references: [site_id])
  diesel_receiving_received   diesel_receiving[] @relation("received_by_user_id")
  diesel_receiving_created    diesel_receiving[] @relation("created_by_user_id")
  diesel_receiving_updated    diesel_receiving[] @relation("updated_by_user_id")
  diesel_consumption_operator diesel_consumption[] @relation("operator_driver_user_id")
  diesel_consumption_created  diesel_consumption[] @relation("created_by_user_id")
  diesel_consumption_updated  diesel_consumption[] @relation("updated_by_user_id")
  invoices_generated         invoices[] @relation("generated_by_user_id")
  audit_logs                 audit_log[] @relation("changed_by_user_id")
}

model roles {
  role_id     Int     @id @default(autoincrement())
  role_name   String
  description String
  users       users[]
}

model sites {
  site_id           Int                @id @default(autoincrement())
  site_name         String
  location          String
  users             users[]
  tanks             tanks[]
  diesel_receiving  diesel_receiving[]
  diesel_consumption diesel_consumption[]
  invoices          invoices[]
}

model tanks {
  tank_id          Int                @id @default(autoincrement())
  tank_name        String
  capacity_liters  Float
  site_id          Int
  sites            sites              @relation(fields: [site_id], references: [site_id])
  diesel_receiving diesel_receiving[]
}

model suppliers {
  supplier_id         Int                @id @default(autoincrement())
  supplier_name       String
  contact_person_name String
  contact_number      String
  address             String
  diesel_receiving    diesel_receiving[]
}

model vehicles_equipment {
  vehicle_equipment_id      Int     @id @default(autoincrement())
  plate_number_machine_id   String
  type                      String
  make_model                String
  current_odometer_hours    Float
  current_odometer_kilometer Float
  daily_usage_limit         Float
  diesel_consumption        diesel_consumption[]
}

model jobs_projects {
  job_id          Int                @id @default(autoincrement())
  job_number      String
  job_description String
  start_date      DateTime
  end_date        DateTime
  diesel_consumption diesel_consumption[]
  invoice_items   invoice_items[]
}

model diesel_receiving {
  receiving_id         Int      @id @default(autoincrement())
  receipt_number       String
  received_datetime    DateTime
  quantity_liters      Float
  site_id              Int
  tank_id              Int
  received_by_user_id  String
  supplier_id          Int
  signature_image_path String
  created_at           DateTime
  updated_at           DateTime
  created_by_user_id   String
  updated_by_user_id   String

  sites                sites    @relation(fields: [site_id], references: [site_id])
  tanks                tanks    @relation(fields: [tank_id], references: [tank_id])
  suppliers            suppliers @relation(fields: [supplier_id], references: [supplier_id])
  received_by_user     users    @relation("received_by_user_id", fields: [received_by_user_id], references: [employee_number])
  created_by_user      users    @relation("created_by_user_id", fields: [created_by_user_id], references: [employee_number])
  updated_by_user      users    @relation("updated_by_user_id", fields: [updated_by_user_id], references: [employee_number])
}

model diesel_consumption {
  consumption_id           Int      @id @default(autoincrement())
  consumption_datetime     DateTime
  quantity_liters          Float
  site_id                  Int
  vehicle_equipment_id     Int
  job_id                   Int
  operator_driver_user_id  String
  odometer_km_hours        Float
  signature_image_path     String
  created_at               DateTime
  updated_at               DateTime
  created_by_user_id       String
  updated_by_user_id       String

  sites                    sites    @relation(fields: [site_id], references: [site_id])
  vehicles_equipment       vehicles_equipment @relation(fields: [vehicle_equipment_id], references: [vehicle_equipment_id])
  jobs_projects            jobs_projects @relation(fields: [job_id], references: [job_id])
  operator_driver_user     users    @relation("operator_driver_user_id", fields: [operator_driver_user_id], references: [employee_number])
  created_by_user          users    @relation("created_by_user_id", fields: [created_by_user_id], references: [employee_number])
  updated_by_user          users    @relation("updated_by_user_id", fields: [updated_by_user_id], references: [employee_number])
  invoice_items            invoice_items[]
}

model invoices {
  invoice_id            Int      @id @default(autoincrement())
  invoice_number        String
  invoice_date          DateTime
  start_date            DateTime
  end_date              DateTime
  total_amount          Float
  generated_by_user_id  String
  site_id               Int

  generated_by_user     users    @relation("generated_by_user_id", fields: [generated_by_user_id], references: [employee_number])
  sites                 sites    @relation(fields: [site_id], references: [site_id])
  invoice_items         invoice_items[]
}

model invoice_items {
  invoice_item_id   Int      @id @default(autoincrement())
  invoice_id        Int
  consumption_id    Int
  quantity_liters   Float
  rate_per_liter    Float
  amount            Float
  job_id            Int

  invoices          invoices @relation(fields: [invoice_id], references: [invoice_id])
  diesel_consumption diesel_consumption @relation(fields: [consumption_id], references: [consumption_id])
  jobs_projects     jobs_projects @relation(fields: [job_id], references: [job_id])
}

model audit_log {
  log_id             Int      @id @default(autoincrement())
  table_name         String
  record_id          Int
  action_type        String
  old_value          String
  new_value          String
  changed_by_user_id String
  change_timestamp   DateTime

  changed_by_user    users    @relation("changed_by_user_id", fields: [changed_by_user_id], references: [employee_number])
}